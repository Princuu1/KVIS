# âœ… Improved Replit Prompt (copyâ€“paste into Replit AI to scaffold the project)

**Title:** Student Attendance & Automation App (Node.js, Express, React/TS, Socket.IO, Supabase, Nodemailer, Face + Geofence)

**Stack:**

* Backend: Node.js + Express (TypeScript). Auth with JWT. Socket.IO server. Nodemailer for SMTP mail.
* DB: Supabase Postgres (tables below). Use `@supabase/supabase-js` on server with service role key (not on client).
* Frontend: React + TypeScript + Vite. React Router DOM for routes. Tailwind CSS for responsive UI. Socket.IO client. face-api.js (TensorFlow\.js) for browser-based face recognition. Geolocation API for campus geofence check.
* Deploy/Run: Single Replit project with `server/` and `client/`. Root `npm run dev` runs both via `concurrently`.

**Core Features:**

1. Registration & Login

   * Registration fields: collegeRollNo (unique), fullName, idPhoto (file upload), studentPhone, parentPhone, studentEmail, parentEmail, password (hash/Bcrypt).
   * Login: rollNo + password â†’ JWT cookie (httpOnly, secure in prod).
2. Home dashboard after login

   * Cards linking to: Today Attendance, Attendance History (date to date), College Calendar, Chat Room (real-time), Exam Schedule, Class Syllabus.
3. Attendance (manual + automated)

   * Manual: mark Present / Absent / Leave (+reason), Save button.
   * Automated: browser asks location â†’ check within campus geofence (lat, lng, radius meters). Camera opens, live face detection compares against stored face descriptor from idPhoto. If matched and inside geofence, record attendance for that day/time/location with `verified=true`.
   * Webhook endpoint `/webhooks/attendance` that can receive JSON to auto-mark (for future integrations). Log events.
4. Chat Room

   * Real-time via Socket.IO. Messages broadcast to room "general". Persist recent 50 messages to `localStorage` (no server persistence for chat as requested). Show online user count.
5. Attendance History

   * Filter by date range; show totals and percentage; export CSV.
6. Calendar / Exam Schedule / Syllabus

   * Each is its own route and TSX screen. CRUD minimal forms (create/update/delete items) stored in Supabase tables.
7. Email Automation

   * When a student is marked **absent for a class** â†’ email student.
   * If **absent for full day** (no Present across today) â†’ also email parents.
   * Server background cron (node-cron) runs at 17:30 Asia/Kolkata to evaluate absences and send emails.

**Security & Privacy:**

* Store passwords with bcrypt.
* JWT in httpOnly cookie. CSRF-protect POST routes with same-site cookies. CORS allow client origin.
* Never expose Supabase service key to client.
* Face embeddings stored as Float32 arrays in DB as JSON (`face_descriptor`). Allow re-enroll from Profile.

**Responsive:**

* Mobile-first Tailwind. Fixed header + bottom nav on mobile.

**Nice-to-haves:**

* .env setup
* ESLint + Prettier
* Dockerfile optional

---

# ðŸ“¦ Project Structure

```
.
â”œâ”€â”€ server
â”‚   â”œâ”€â”€ src
â”‚   â”‚   â”œâ”€â”€ index.ts
â”‚   â”‚   â”œâ”€â”€ env.ts
â”‚   â”‚   â”œâ”€â”€ db.ts
â”‚   â”‚   â”œâ”€â”€ mailer.ts
â”‚   â”‚   â”œâ”€â”€ auth
â”‚   â”‚   â”‚   â”œâ”€â”€ hash.ts
â”‚   â”‚   â”‚   â””â”€â”€ jwt.ts
â”‚   â”‚   â”œâ”€â”€ middleware
â”‚   â”‚   â”‚   â””â”€â”€ authGuard.ts
â”‚   â”‚   â”œâ”€â”€ routes
â”‚   â”‚   â”‚   â”œâ”€â”€ auth.ts
â”‚   â”‚   â”‚   â”œâ”€â”€ attendance.ts
â”‚   â”‚   â”‚   â”œâ”€â”€ calendar.ts
â”‚   â”‚   â”‚   â”œâ”€â”€ exams.ts
â”‚   â”‚   â”‚   â”œâ”€â”€ syllabus.ts
â”‚   â”‚   â”‚   â””â”€â”€ webhooks.ts
â”‚   â”‚   â””â”€â”€ jobs
â”‚   â”‚       â””â”€â”€ dailyAbsentCheck.ts
â”‚   â””â”€â”€ tsconfig.json
â”œâ”€â”€ client
â”‚   â”œâ”€â”€ index.html
â”‚   â”œâ”€â”€ tsconfig.json
â”‚   â””â”€â”€ src
â”‚       â”œâ”€â”€ main.tsx
â”‚       â”œâ”€â”€ App.tsx
â”‚       â”œâ”€â”€ api.ts
â”‚       â”œâ”€â”€ hooks
â”‚       â”‚   â””â”€â”€ useGeoFence.ts
â”‚       â”œâ”€â”€ pages
â”‚       â”‚   â”œâ”€â”€ Login.tsx
â”‚       â”‚   â”œâ”€â”€ Register.tsx
â”‚       â”‚   â”œâ”€â”€ Home.tsx
â”‚       â”‚   â”œâ”€â”€ AttendanceToday.tsx
â”‚       â”‚   â”œâ”€â”€ AttendanceHistory.tsx
â”‚       â”‚   â”œâ”€â”€ Calendar.tsx
â”‚       â”‚   â”œâ”€â”€ ChatRoom.tsx
â”‚       â”‚   â”œâ”€â”€ ExamSchedule.tsx
â”‚       â”‚   â””â”€â”€ Syllabus.tsx
â”‚       â”œâ”€â”€ components
â”‚       â”‚   â”œâ”€â”€ FaceScanner.tsx
â”‚       â”‚   â””â”€â”€ Nav.tsx
â”‚       â””â”€â”€ styles.css
â”œâ”€â”€ package.json (workspace/scripts)
â”œâ”€â”€ .env (created in Replit Secrets)
â””â”€â”€ README.md
```